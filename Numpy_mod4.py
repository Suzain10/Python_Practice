# -*- coding: utf-8 -*-
"""Numpy_Mod4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XToe2Zz2jtfPejC4lTIbWLwBwYFVv7Va
"""

import numpy as np

import numpy as np
a = np.array([1,2,3,9,4,8])
print(a)

print(np.arange(7))


L = range(500)
%timeit [i**2 for i in L]

a = np.arange(500)
%timeit a**2

#Creating numpy array:
a = np.array([1,2,3,4])
print(a)
a

#Dimension:
a.ndim

#shape:
a.shape

len(a)

#creating 2D array:
import numpy as np
b = np.array([[1,2,3],[4,5,6]])

print(b)
b

b.ndim

b.shape

len(b) #gives the size of ist dimension i.e no.of rows

c =np.array([[[0,1],[2,3]],[[4,5],[6,7]]])  #check
c
print(c)

len(c)

c.ndim

c.shape

#Functions for creating numpy arrays:
a = np.arange(10)
a

b = np.arange(1,10,2)
b

a = np.linspace(0,1,5) #linear space to divide line into 5 points
a

#Common arrays:
a = np.ones((3,3))
a

a.dtype

a.ndim

b = np.ones((3,3))
b

np.eye(3)

np.eye(7,5)

#Creating array using diagonal func:
a = np.diag([1,2,3,4])



np.diag(a)

print(np.diag(a))

#Create array using random:
a = np.random.rand(6)
a

print(a)

a.ndim

a = np.random.randn(3)
a

#Data Types:

a = np.arange(6)
a
a.dtype

a = np.arange(6,dtype ='float64')
a

a.dtype

a = np.zeros((3,3))  #by default it's float for zeros and ones
print(a)
a.dtype

a = np.array([1+2j,2+4j])
print(a)
a.dtype

b = np.array([True,False,True,False])
print(b.dtype)
print(b.ndim)

c = np.array(['Ram',True,12])
print(c)

d = np.array(['Ram','Rob','Steve'],dtype = 'S')
d.dtype

d = np.array(['Ram','Rob','Steve'])
d.dtype

#Indexing and slicing:
a = np.arange(10)
print(a[5])

a = np.diag([1,6,8])
print(a[1,1])

#assigning values:
a[1,2]= 5
a[0,0] =3
print(a)

#Slicing:
import numpy as np
a = np.arange(10)
a

a[2:10:2]

import numpy as np

a = np.arange(10)
a[4:] = 6
a

b = np.arange(6)
a[4:]=b[::-1]
a

#Copies and Views:
a = np.arange(10)
a

b =a[::2]
b

np.shares_memory(a,b)

b[3] = 9
b

a

a = np.arange(10)
c = a[::2].copy()
c

np.shares_memory(a,c)

c[0]= 10
c

a

a = np.random.randint(0,20,12)
a

mask = (a%2== 0)

y = a[mask]
y

np.shares_memory(a,y)

a[mask]= -1 #Now all even no's become -1
a

a = np.arange(0,100,10)
a

a[[2,3,3,4,2]]

a[[9,7]] = -200


