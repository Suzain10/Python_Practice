# -*- coding: utf-8 -*-
"""Exception Handling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JKkzQZv6dioY5I5-PH4e3D1hQXRLCN6t
"""

a = 4
print(f"Multiplication table of {4} is:")
for i in range(1,11):
 print(f" 4 X {i} = {4 * i}")

a = int(input())
print(f"Multiplication table of {a} is:")
for i in range(1,11):
 print(f" {a} X {i} = {a * i}")

a = int(input())
print(f"Multiplication table of {a} is:")
try:
  for i in range(1,11):
    print(f" {a} X {i} = {a * i}")
except:
     print("wow")
print("The earth is round")

try:
  num =int(input())
except ValueError:
  print("Number is not an integer")

try:
  num =int(input())
  a = [6,3,4]
  print(a[num])
except ValueError:
  print("Number is not an integer")
except IndexError:
  print("Index Error")

try:
  l =[1,4,5,3,9]
  num = int(input("Enter the index: "))
  print(l[num])
except:
  print("Some error occurred")
finally:
  print("I will always be executed.")

def func1():
  try:
    l =[1,4,5,3,9]
    num = int(input("Enter the index: "))
    print(l[num])
    return 1
  except:
    print("Some error occurred")
    return 0
  finally:
    print("I will always be executed.")
x=func1()
print(x)

